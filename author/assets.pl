#!/usr/bin/perl
use strict;
use warnings;
use utf8;
use 5.008001;
use lib 'lib';
use LWP::UserAgent;
use autodie;
use Data::Dumper;
use File::Basename;
use File::Temp qw/tmpnam tempdir/;
use Text::Xslate;

my $xslate = Text::Xslate->new(
    syntax    => 'TTerse',
    module    => ['Data::Dumper'],
    type      => 'text',
    tag_start => '<%',
    tag_end   => '%>',
);
my $ua = LWP::UserAgent->new();

&main;exit;

sub main {
    local $Data::Dumper::Terse = 1;

    if (@ARGV) {
        __PACKAGE__->can($ARGV[0])->();
    } else {
        run_jquery();
        run_bootstrap();
    }
}

sub slurp {
    open my $fh, '<', shift;
    local $/;
    <$fh>;
}

sub run_jquery {
    my $url = 'http://code.jquery.com/jquery-1.6.4.min.js';
    my $res = $ua->get($url);
    $res->is_success or die "Cannot fetch $url: " . $res->status_line;

    my $jquery = $res->decoded_content;
    open my $fh, '>:utf8', 'lib/Amon2/Setup/Asset/jQuery.pm';
    print {$fh} $xslate->render_string(<<'...', +{ file => $0, basename => basename($url), files => Data::Dumper::Dumper({ "js/" . basename($url) => $jquery})});
# This file is generated by <% file %>. Do not edit manually.
package Amon2::Setup::Asset::jQuery;
use strict;
use warnings;

sub tags {
    <<',,,';
    <script src="[% static_file('/static/js/<% basename %>') %]"></script>
,,,
}

sub files {
    my ($self) = @_;
    return <% files %>;
}

1;
...
    close $fh;
}

sub fetch {
    my $url = shift;
    my $res = $ua->get($url);
    $res->is_success or die "Cannot fetch $url: " . $res->status_line;
    return $res->decoded_content;
}

sub run_bootstrap {
    my $files = {};
    for my $url (qw(
        http://twitter.github.com/bootstrap/1.3.0/bootstrap.min.css
    )) {
        my $basename = do {
            local $_ = $url;
            s!.+/!!;
            $_;
        }; 
        $files->{"bootstrap/$basename"} = fetch($url);
    }

   my $content = <<'...';
# This file is generated by FILEFILE. Do not edit manually.
package Amon2::Setup::Asset::Bootstrap;
use strict;
use warnings;

sub tags {
    <<',,,';
    <link href="[% static_file('/static/bootstrap/bootstrap.min.css') %]" rel="stylesheet" type="text/css" />
,,,
}

sub files {
    my ($class) = @_;
    return XXXYYY;
}

1;
...
    $content =~ s/FILEFILE/$0/g;
    $content =~ s/XXXYYY/Dumper($files)/ge;

    open my $fh, '>:utf8', 'lib/Amon2/Setup/Asset/Bootstrap.pm';
    print {$fh} $content;
    close $fh;

    eval "use Amon2::Setup::Asset::Bootstrap;";
    die $@ if $@;
}

